name: Build HeatSim (Windows)

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Tag to create/update release for (e.g., v1.8)"
        required: false
        type: string
  push:
    tags:
      - "v*"

jobs:
  build-windows:
    permissions:
      contents: write
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          if (Test-Path .\requirements.txt) { pip install -r requirements.txt } else { pip install pyinstaller }

      - name: Build executable (PowerShell script)
        shell: pwsh
        run: |
          Write-Host 'Running build_exe.ps1'
          if (Test-Path .\build_exe.ps1) { .\build_exe.ps1 } else { Write-Host 'build_exe.ps1 not found, using pyinstaller via spec if present'; if (Test-Path .\HeatSim.spec) { pyinstaller .\HeatSim.spec } else { pyinstaller --onefile main.py -n HeatSim } }

      - name: Upload exe artifact
        uses: actions/upload-artifact@v4
        with:
          name: HeatSim-windows-exe
          path: dist/HeatSim.exe

      - name: Generate SHA-256 checksum
        shell: pwsh
        run: |
          $hash = (Get-FileHash -Algorithm SHA256 .\dist\HeatSim.exe).Hash
          "${hash}  HeatSim.exe" | Out-File -FilePath .\dist\HeatSim.exe.sha256 -Encoding ascii -NoNewline

      - name: Create GitHub Release and upload asset
        uses: softprops/action-gh-release@v2
        # On tag push, github.ref is refs/tags/<tag>; on manual run, provide inputs.tag_name
        with:
          files: |
            dist/HeatSim.exe
            dist/HeatSim.exe.sha256
          name: ${{ github.ref_name != '' && github.ref_name || github.event.inputs.tag_name }}
          tag_name: ${{ github.event.inputs.tag_name }}
          generate_release_notes: true
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
